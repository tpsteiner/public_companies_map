{"version":3,"sources":["datasets/filers.csv","datasets/state_centers.csv","datasets/firms.csv","components/MarkerDetails.js","components/MapComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MarkerDetails","props","state","marker","prevProps","this","setState","Object","keys","length","style","textAlign","deets","map","row","i","key","Component","providers","osm","x","y","z","s","String","fromCharCode","selected_options","geo","firm","coords","MapComponent","zoomIn","zoom","Math","min","zoomOut","max","handleBoundsChange","center","bounds","initial","handleMarkerClick","event","payload","anchor","selectedMarker","handleGeoChange","selectedOption","console","log","value","states","find","el","selected","opts","cnt","filter_cnt","filers","filter","filer","filers_L1","temporarilyDisable","business_state","filers_L2","latitude","longitude","handleFirmChange","label","elementToDisable1","document","getElementById","elementToDisable2","setAttribute","ms","Promise","r","j","setTimeout","then","provider","metaWheelZoom","twoFingerDrag","animate","zoomSnap","mouseEvents","touchEvents","minZoom","maxZoom","state_options","firm_options","width","body","clientWidth","height","window","screen","availHeight","csv","filers_sample","data","forEach","d","cik","lat","lng","state_centers","name","firms","push","selected_data","id","options","onChange","isClearable","placeholder","fontSize","marginTop","maxWidth","margin","limitBounds","onBoundsChanged","onClick","handleClick","boxClassname","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.779b22ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filers.765848e0.csv\";","module.exports = __webpack_public_path__ + \"static/media/state_centers.3b98a23a.csv\";","module.exports = __webpack_public_path__ + \"static/media/firms.fd70d507.csv\";","import React, { Component } from 'react'\r\n\r\nexport default class MarkerDetails extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      marker: this.props.marker\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.marker !== prevProps.marker) \r\n      {this.setState({marker: this.props.marker})}\r\n  }\r\n  \r\n  render() {\r\n    const marker = this.state.marker\r\n\r\n    if (Object.keys(marker).length === 0) {\r\n      return <div style={{textAlign: \"center\"}}>\r\n          <p>Select a marker to show details...</p>\r\n        </div>\r\n    } else {\r\n      const deets = [\r\n        [\"Company\", marker['Issuer Name']],\r\n        [\"Stock Ticker\", marker['Issuer Ticker']],\r\n        [\"Sector\", marker['sector_name']],\r\n        [\"Industry\", marker['industry_name']],\r\n        [\"Fiscal year end\", marker['fiscal_year_end']],\r\n        [\"Auditor\", marker['Firm Name']],\r\n        [\"Audit Lead Partner\", marker['Engagement Partner Name']],\r\n        [\"Auditor Location\", marker['Firm Issuing City'] + \", \" + marker['Firm Issuing State']]\r\n      ]\r\n\r\n      return (\r\n        <table>\r\n          <tbody>\r\n            {deets.map((row, i) => (\r\n              <tr key={i}>\r\n                <td>{row[0]}</td>\r\n                <td>{row[1]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Component, ElementRef } from 'react';\r\nimport Map from 'pigeon-maps';\r\nimport { csv } from 'd3';\r\nimport Marker from 'pigeon-marker';\r\nimport filers_sample from '../datasets/filers.csv';\r\nimport state_centers from '../datasets/state_centers.csv';\r\nimport firms from '../datasets/firms.csv';\r\nimport MarkerDetails from './MarkerDetails';\r\nimport Select from 'react-select';\r\n\r\nconst providers = {\r\n  osm: (x, y, z) => {\r\n    const s = String.fromCharCode(97 + (x + y + z) % 3)\r\n    return `https://${s}.tile.openstreetmap.org/${z}/${x}/${y}.png`\r\n  }\r\n}\r\n\r\nconst lng2tile = (lon, zoom) => (lon + 180) / 360 * Math.pow(2, zoom)\r\nconst lat2tile = (lat, zoom) => (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)\r\n\r\nlet selected_options = {geo: null, firm: null}\r\nlet coords = {}\r\n\r\nclass MapComponent extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n \r\n    this.state = {\r\n      center: [43.3,-84.5390101],  // [38, -96] zoom 4.5\r\n      zoom: 6,\r\n      provider: 'osm',\r\n      metaWheelZoom: false,\r\n      twoFingerDrag: false,\r\n      animate: false,\r\n      zoomSnap: true,\r\n      mouseEvents: true,\r\n      touchEvents: true,\r\n      minZoom: 1,\r\n      maxZoom: 18,\r\n      filers: [],\r\n      filers_L1: [],\r\n      filers_L2: [],\r\n      states: [],\r\n      state_options: [],\r\n      firm_options: [],\r\n      selectedMarker: {},\r\n      filter_cnt: 0,\r\n      width: document.body.clientWidth,\r\n      height: window.screen.availHeight\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    csv(filers_sample).then(data => {\r\n      data.forEach(d => {\r\n        d.cik = +d.cik\r\n        d.lat = +d.lat\r\n        d.lng = +d.lng\r\n      })\r\n      this.setState({filers: data})\r\n    })\r\n\r\n    csv(state_centers).then(data => {\r\n      data.forEach(d => {\r\n        d.latitude = +d.latitude\r\n        d.longitude = +d.longitude\r\n      })\r\n      \r\n      this.setState({states: data})\r\n      this.setState({state_options: data.map(d => {\r\n        return {value: d.state, label: d.name}\r\n      })})\r\n    })\r\n\r\n    csv(firms).then(data => {\r\n      data.forEach(d => {\r\n        this.state.firm_options.push({label: d['Firm Name']})\r\n      })\r\n      \r\n      this.setState({firm_options: data.map(d => {\r\n        return {label: d['Firm Name']}\r\n      })})\r\n    })\r\n  }\r\n\r\n  zoomIn = () => {\r\n    this.setState({\r\n      zoom: Math.min(this.state.zoom + 1, 18)\r\n    })\r\n  }\r\n\r\n  zoomOut = () => {\r\n    this.setState({\r\n      zoom: Math.max(this.state.zoom - 1, 1)\r\n    })\r\n  }\r\n\r\n  handleBoundsChange = ({ center, zoom, bounds, initial }) => {\r\n    this.setState({ center, zoom })\r\n  }\r\n\r\n  handleMarkerClick = ({ event, payload, anchor }) => {\r\n    this.setState({selectedMarker: payload})\r\n  }\r\n\r\n  handleGeoChange = (selectedOption, props) => {\r\n    console.log(props)\r\n    try {\r\n      selected_options.geo = selectedOption.value\r\n      coords = this.state.states.find(el => el.state === selectedOption.value)\r\n    } catch {\r\n      selected_options.geo = null\r\n    }\r\n\r\n    let selected = []\r\n    const opts = {...selectedOption}\r\n    const cnt = this.state.filter_cnt\r\n    \r\n    \r\n    if (selectedOption === null && cnt === 2) {\r\n      selected = this.state.filers.filter(filer => {\r\n        return filer['Firm Name'] === selected_options.firm\r\n      })\r\n      this.setState({\r\n        filers_L1: selected,\r\n        filter_cnt: 1})\r\n        this.temporarilyDisable()\r\n      return\r\n    } else if (selectedOption === null) {\r\n      this.setState({\r\n        filter_cnt: 0})\r\n        this.temporarilyDisable()\r\n      return\r\n    }\r\n\r\n\r\n    if (cnt === 0 || !selected_options.firm) {\r\n      selected = this.state.filers.filter(filer => {\r\n        return filer.business_state === opts.value\r\n      })\r\n      this.setState({\r\n        filers_L1: selected,\r\n        filter_cnt: 1,\r\n        center: [coords.latitude, coords.longitude]\r\n      })\r\n    } else if (cnt === 2) {\r\n      selected = this.state.filers.filter(filer => {\r\n        return filer.business_state === opts.value && filer['Firm Name'] === selected_options.firm\r\n      })\r\n      this.setState({\r\n        filers_L2: selected,\r\n        filter_cnt: 2,\r\n        center: [coords.latitude, coords.longitude]\r\n      })\r\n    } else {\r\n      selected = this.state.filers_L1.filter(filer => {\r\n        return filer.business_state === opts.value\r\n      })\r\n      this.setState({\r\n        filers_L2: selected,\r\n        filter_cnt: 2,\r\n        center: [coords.latitude, coords.longitude]\r\n      })\r\n    }\r\n  }\r\n\r\n  handleFirmChange = selectedOption => {\r\n    try {\r\n      selected_options.firm = selectedOption.label\r\n    } catch {\r\n      selected_options.firm = null\r\n    }\r\n    \r\n    let selected = []\r\n    const opts = {...selectedOption}\r\n    const cnt = this.state.filter_cnt\r\n    \r\n    if (selectedOption === null && cnt === 2) {\r\n      selected = this.state.filers.filter(filer => {\r\n        return filer.business_state === selected_options.geo\r\n      })\r\n      this.setState({\r\n        filers_L1: selected,\r\n        filter_cnt: 1})\r\n      this.temporarilyDisable()\r\n      return\r\n    } else if (selectedOption === null) {\r\n      this.setState({\r\n        filter_cnt: 0})      \r\n        this.temporarilyDisable()\r\n        return\r\n    }\r\n\r\n    if (cnt === 0 || !selected_options.geo) {\r\n      selected = this.state.filers.filter(filer => {\r\n        return filer['Firm Name'] === opts.label\r\n      })\r\n      this.setState({\r\n        filers_L1: selected,\r\n        filter_cnt: 1\r\n      })\r\n    } else if (cnt === 2) {\r\n      selected = this.state.filers.filter(filer => {\r\n        return filer['Firm Name'] === opts.label && filer.business_state === selected_options.geo\r\n      })\r\n      this.setState({\r\n        filers_L2: selected,\r\n        filter_cnt: 2\r\n      })\r\n    } else {\r\n      selected = this.state.filers_L1.filter(filer => {\r\n        return filer['Firm Name'] === opts.label\r\n      })\r\n      this.setState({\r\n        filers_L2: selected,\r\n        filter_cnt: 2\r\n      })\r\n    }\r\n  }\r\n\r\n  // handleAnimationStart = () => {\r\n  //   this.setState({ animating: true })\r\n  // }\r\n\r\n  // handleAnimationStop = () => {\r\n  //   this.setState({ animating: false })\r\n  // }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   console.log(nextState.center, \"and\", this.state.center)\r\n  //   return !(nextState.center === this.state.center)\r\n  // }\r\n\r\ntemporarilyDisable = () => {\r\n  // This is necessary because mobile taps register two events, touch and mousedown\r\n  const elementToDisable1 = document.getElementById('geo-select');\r\n  const elementToDisable2 = document.getElementById('firm-select');\r\n  const wait = ms => new Promise((r, j)=>setTimeout(r, ms))\r\n  elementToDisable1.setAttribute(\"style\", \"pointer-events: none\")\r\n  elementToDisable2.setAttribute(\"style\", \"pointer-events: none\")\r\n  let prom = wait(50).then(() => {\r\n    elementToDisable1.setAttribute(\"style\", \"pointer-events: all\")\r\n    elementToDisable2.setAttribute(\"style\", \"pointer-events: all\")\r\n  })\r\n}\r\n\r\n  render () {\r\n    const { center, zoom, provider, animate, metaWheelZoom, twoFingerDrag, zoomSnap, mouseEvents, touchEvents, minZoom, maxZoom, filter_cnt } = this.state\r\n    const width = (1200 > this.state.width) ? this.state.width - 10 : 1200\r\n    const height = (650 > this.state.height / 2) ? this.state.height / 2 : 650\r\n    let selected_data = []\r\n    \r\n    if (filter_cnt === 0) {\r\n      selected_data = []\r\n    } else if (filter_cnt === 1) {\r\n      selected_data = this.state.filers_L1\r\n    } else if (filter_cnt === 2) {\r\n      selected_data = this.state.filers_L2\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Select id=\"geo-select\" options={this.state.state_options} onChange={(props) => this.handleGeoChange(props)} isClearable placeholder=\"Select a State...\" />\r\n        <Select id=\"firm-select\" options={this.state.firm_options} onChange={this.handleFirmChange} isClearable placeholder=\"Select an Audit Firm...\" />\r\n      \t<h1 style={{textAlign: 'center', fontSize: 'large'}}>Public Companies and their Auditors</h1>\r\n\r\n        <div style={{marginTop: 20}}>\r\n          <div style={{maxWidth: width, margin: '0 auto'}}>\r\n            <Map\r\n              limitBounds='edge'\r\n              center={center}\r\n              zoom={zoom}\r\n              provider={providers[provider]}\r\n              onBoundsChanged={this.handleBoundsChange}\r\n              onClick={this.handleClick}\r\n              // onAnimationStart={this.handleAnimationStart}\r\n              // onAnimationStop={this.handleAnimationStop}\r\n              animate={animate}\r\n              metaWheelZoom={metaWheelZoom}\r\n              twoFingerDrag={twoFingerDrag}\r\n              zoomSnap={zoomSnap}\r\n              mouseEvents={mouseEvents}\r\n              touchEvents={touchEvents}\r\n              minZoom={minZoom}\r\n              maxZoom={maxZoom}\r\n              width={width}\r\n              height={height}\r\n              boxClassname=\"pigeon-filters\">\r\n              {selected_data.map(d => {\r\n                return <Marker key={d.cik} anchor={[d.lat, d.lng]} payload={d} onClick={this.handleMarkerClick} />\r\n              })}\r\n            </Map>\r\n          </div>\r\n        </div>\r\n        <MarkerDetails marker={this.state.selectedMarker}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapComponent\r\n// export default React.memo(MapComponent)\r\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './App.css';\nimport MapComponent from './components/MapComponent';\n\nfunction App() {\n  // MapComponent();\n  return (\n   <MapComponent />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <React.StrictMode>\n      <App />,\n    // </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}