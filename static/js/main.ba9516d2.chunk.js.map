{"version":3,"sources":["datasets/filers_sample.csv","components/MarkerDetails.js","components/MapComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MarkerDetails","props","state","marker","prevProps","this","setState","Object","keys","length","style","textAlign","display","margin","className","Component","providers","osm","x","y","z","s","String","fromCharCode","MapComponent","zoomIn","zoom","Math","min","zoomOut","max","handleBoundsChange","center","bounds","initial","handleMarkerClick","event","payload","anchor","selectedMarker","handleAnimationStart","animating","handleAnimationStop","provider","metaWheelZoom","twoFingerDrag","animate","zoomSnap","mouseEvents","touchEvents","minZoom","maxZoom","filers","width","document","body","clientWidth","height","window","screen","availHeight","csv","filers_sample","then","data","forEach","d","cik","lat","lng","marginTop","maxWidth","limitBounds","onBoundsChanged","onClick","handleClick","onAnimationStart","onAnimationStop","boxClassname","map","key","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,2C,gQCEtBC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,EAAKF,MAAME,QAHJ,E,+DAOAC,GACbC,KAAKJ,MAAME,SAAWC,EAAUD,QACjCE,KAAKC,SAAS,CAACH,OAAQE,KAAKJ,MAAME,W,+BAIrC,OAA8C,IAA1CI,OAAOC,KAAKH,KAAKH,MAAMC,QAAQM,OAC1B,yBAAKC,MAAO,CAACC,UAAW,WAC7B,kEAGK,yBAAKD,MAAO,CAACE,QAAS,QAASC,OAAQ,SAC5C,yBAAKH,MAAO,CAACE,QAAS,eACpB,uBAAGE,UAAU,gBAAb,YACA,uBAAGA,UAAU,gBAAb,iBACA,uBAAGA,UAAU,gBAAb,WACA,uBAAGA,UAAU,gBAAb,aACA,uBAAGA,UAAU,gBAAb,oBACA,uBAAGA,UAAU,gBAAb,YACA,uBAAGA,UAAU,gBAAb,uBACA,uBAAGA,UAAU,gBAAb,sBAEF,yBAAKJ,MAAO,CAACE,QAAS,eACpB,uBAAGE,UAAU,gBAAgBT,KAAKH,MAAMC,OAAO,gBAC/C,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAO,kBAC/C,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAX,aAC7B,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAX,eAC7B,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAX,iBAC7B,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAO,cAC/C,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAO,4BAC/C,uBAAGW,UAAU,gBAAgBT,KAAKH,MAAMC,OAAO,qBAA/C,KAAuEE,KAAKH,MAAMC,OAAO,6B,GAtCxDY,aCMrCC,EAAY,CAChBC,IAAK,SAACC,EAAGC,EAAGC,GACV,IAAMC,EAAIC,OAAOC,aAAa,IAAML,EAAIC,EAAIC,GAAK,GACjD,MAAM,WAAN,OAAkBC,EAAlB,mCAA8CD,EAA9C,YAAmDF,EAAnD,YAAwDC,EAAxD,UAOiBK,E,kDACnB,WAAavB,GAAQ,IAAD,8BAClB,cAAMA,IAiCRwB,OAAS,WACP,EAAKnB,SAAS,CACZoB,KAAMC,KAAKC,IAAI,EAAK1B,MAAMwB,KAAO,EAAG,OApCpB,EAwCpBG,QAAU,WACR,EAAKvB,SAAS,CACZoB,KAAMC,KAAKG,IAAI,EAAK5B,MAAMwB,KAAO,EAAG,MA1CpB,EA8CpBK,mBAAqB,YAAwC,IAArCC,EAAoC,EAApCA,OAAQN,EAA4B,EAA5BA,KAA4B,EAAtBO,OAAsB,EAAdC,QAC5C,EAAK5B,SAAS,CAAE0B,SAAQN,UA/CN,EAkDpBS,kBAAoB,YAAgC,EAA7BC,MAA8B,IAAvBC,EAAsB,EAAtBA,QAAsB,EAAbC,OACrC,EAAKhC,SAAS,CAACiC,eAAgBF,KAnDb,EAsDpBG,qBAAuB,WACrB,EAAKlC,SAAS,CAAEmC,WAAW,KAvDT,EA0DpBC,oBAAsB,WACpB,EAAKpC,SAAS,CAAEmC,WAAW,KAxD3B,EAAKvC,MAAQ,CACX8B,OAAQ,CAAC,IAAK,IACdN,KAAM,IACNiB,SAAU,MACVC,eAAe,EACfC,eAAe,EACfC,SAAS,EACTC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,QAAS,EACTC,QAAS,GACTC,OAAQ,GACRb,eAAgB,GAChBc,MAAOC,SAASC,KAAKC,YACrBC,OAAQC,OAAOC,OAAOC,aAlBN,E,gEAsBC,IAAD,OAElBC,YAAIC,KAAeC,MAAK,SAAAC,GACtBA,EAAKC,SAAQ,SAAAC,GACXA,EAAEC,KAAOD,EAAEC,IACXD,EAAEE,KAAOF,EAAEE,IACXF,EAAEG,KAAOH,EAAEG,OAEb,EAAK/D,SAAS,CAAC8C,OAAQY,S,+BAgChB,IAAD,SACwH3D,KAAKH,MAA7H8B,EADA,EACAA,OAAQN,EADR,EACQA,KAAMiB,EADd,EACcA,SAAUG,EADxB,EACwBA,QAASF,EADjC,EACiCA,cAAeC,EADhD,EACgDA,cAAeE,EAD/D,EAC+DA,SAAUC,EADzE,EACyEA,YAAaC,EADtF,EACsFA,YAAaC,EADnG,EACmGA,QAASC,EAD5G,EAC4GA,QAC9GE,EAAS,KAAOhD,KAAKH,MAAMmD,MAAShD,KAAKH,MAAMmD,MAAQ,GAAK,KAC5DI,EAAU,IAAMpD,KAAKH,MAAMuD,OAAS,EAAKpD,KAAKH,MAAMuD,OAAS,EAAI,IAGvE,OACE,6BACC,wBAAI/C,MAAO,CAACC,UAAW,WAAvB,uCACC,yBAAKD,MAAO,CAAC4D,UAAW,KACtB,yBAAK5D,MAAO,CAAC6D,SAAUlB,EAAOxC,OAAQ,WACpC,kBAAC,IAAD,CACE2D,YAAY,OACZxC,OAAQA,EACRN,KAAMA,EACNiB,SAAU3B,EAAU2B,GACpB8B,gBAAiBpE,KAAK0B,mBACtB2C,QAASrE,KAAKsE,YACdC,iBAAkBvE,KAAKmC,qBACvBqC,gBAAiBxE,KAAKqC,oBACtBI,QAASA,EACTF,cAAeA,EACfC,cAAeA,EACfE,SAAUA,EACVC,YAAaA,EACbC,YAAaA,EACbC,QAASA,EACTC,QAASA,EACTE,MAAOA,EACPI,OAAQA,EACRqB,aAAa,kBACZzE,KAAKH,MAAMkD,OAAO2B,KAAI,SAAAb,GACrB,OAAO,kBAAC,IAAD,CAAQc,IAAKd,EAAEC,IAAK7B,OAAQ,CAAC4B,EAAEE,IAAKF,EAAEG,KAAMhC,QAAS6B,EAAGQ,QAAS,EAAKvC,0BAKrF,kBAAC,EAAD,CAAehC,OAAQE,KAAKH,MAAMqC,sB,GApGAxB,aCN3BkE,MAPf,WAEE,OACC,kBAAC,EAAD,OCIiBC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEJlC,SAASmC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7B,MAAK,SAAA8B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba9516d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filers_sample.0c1e6a23.csv\";","import React, { Component } from 'react'\r\n\r\nexport default class MarkerDetails extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      marker: this.props.marker\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.marker !== prevProps.marker) \r\n      {this.setState({marker: this.props.marker})}\r\n  }\r\n  \r\n  render() {\r\n    if (Object.keys(this.state.marker).length === 0) {\r\n      return <div style={{textAlign: \"center\"}}>\r\n        <p>Select a marker to show details...</p>\r\n      </div>\r\n    } else {\r\n      return <div style={{display: \"table\", margin: \"auto\"}}>\r\n        <div style={{display: \"table-cell\"}}>\r\n          <p className=\"marker-deets\">Company:</p>\r\n          <p className=\"marker-deets\">Stock Ticker:</p>\r\n          <p className=\"marker-deets\">Sector:</p>\r\n          <p className=\"marker-deets\">Industry:</p>\r\n          <p className=\"marker-deets\">Fiscal Year-end:</p>\r\n          <p className=\"marker-deets\">Auditor:</p>\r\n          <p className=\"marker-deets\">Audit Lead Partner:</p>\r\n          <p className=\"marker-deets\">Auditor Location:</p>\r\n        </div>\r\n        <div style={{display: \"table-cell\"}}>\r\n          <p className=\"marker-deets\">{this.state.marker['Issuer Name']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['Issuer Ticker']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['sector_name']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['industry_name']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['fiscal_year_end']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['Firm Name']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['Engagement Partner Name']}</p>\r\n          <p className=\"marker-deets\">{this.state.marker['Firm Issuing City']}, {this.state.marker['Firm Issuing State']}</p>\r\n        </div>\r\n      </div>\r\n    }\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport Map from 'pigeon-maps';\r\nimport { csv } from 'd3';\r\nimport Marker from 'pigeon-marker';\r\nimport filers_sample from '../datasets/filers_sample.csv';\r\nimport MarkerDetails from \"./MarkerDetails\";\r\n\r\nconst providers = {\r\n  osm: (x, y, z) => {\r\n    const s = String.fromCharCode(97 + (x + y + z) % 3)\r\n    return `https://${s}.tile.openstreetmap.org/${z}/${x}/${y}.png`\r\n  }\r\n}\r\n\r\nconst lng2tile = (lon, zoom) => (lon + 180) / 360 * Math.pow(2, zoom)\r\nconst lat2tile = (lat, zoom) => (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)\r\n\r\nexport default class MapComponent extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      center: [38, -96],\r\n      zoom: 4.5,\r\n      provider: 'osm',\r\n      metaWheelZoom: false,\r\n      twoFingerDrag: false,\r\n      animate: true,\r\n      zoomSnap: true,\r\n      mouseEvents: true,\r\n      touchEvents: true,\r\n      minZoom: 1,\r\n      maxZoom: 18,\r\n      filers: [],\r\n      selectedMarker: {},\r\n      width: document.body.clientWidth,\r\n      height: window.screen.availHeight\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    csv(filers_sample).then(data => {\r\n      data.forEach(d => {\r\n        d.cik = +d.cik\r\n        d.lat = +d.lat\r\n        d.lng = +d.lng\r\n      })\r\n      this.setState({filers: data})\r\n    })\r\n  }\r\n\r\n  zoomIn = () => {\r\n    this.setState({\r\n      zoom: Math.min(this.state.zoom + 1, 18)\r\n    })\r\n  }\r\n\r\n  zoomOut = () => {\r\n    this.setState({\r\n      zoom: Math.max(this.state.zoom - 1, 1)\r\n    })\r\n  }\r\n\r\n  handleBoundsChange = ({ center, zoom, bounds, initial }) => {\r\n    this.setState({ center, zoom })\r\n  }\r\n\r\n  handleMarkerClick = ({ event, payload, anchor }) => {\r\n    this.setState({selectedMarker: payload})\r\n  }\r\n\r\n  handleAnimationStart = () => {\r\n    this.setState({ animating: true })\r\n  }\r\n\r\n  handleAnimationStop = () => {\r\n    this.setState({ animating: false })\r\n  }\r\n\r\n  render () {\r\n    const { center, zoom, provider, animate, metaWheelZoom, twoFingerDrag, zoomSnap, mouseEvents, touchEvents, minZoom, maxZoom } = this.state\r\n    const width = (1200 > this.state.width) ? this.state.width - 10 : 1200\r\n    const height = (650 > this.state.height / 2) ? this.state.height / 2 : 650\r\n    \r\n\r\n    return (\r\n      <div>\r\n      \t<h1 style={{textAlign: 'center'}}>Public Companies and their Auditors</h1>\r\n        <div style={{marginTop: 20}}>\r\n          <div style={{maxWidth: width, margin: '0 auto'}}>\r\n            <Map\r\n              limitBounds='edge'\r\n              center={center}\r\n              zoom={zoom}\r\n              provider={providers[provider]}\r\n              onBoundsChanged={this.handleBoundsChange}\r\n              onClick={this.handleClick}\r\n              onAnimationStart={this.handleAnimationStart}\r\n              onAnimationStop={this.handleAnimationStop}\r\n              animate={animate}\r\n              metaWheelZoom={metaWheelZoom}\r\n              twoFingerDrag={twoFingerDrag}\r\n              zoomSnap={zoomSnap}\r\n              mouseEvents={mouseEvents}\r\n              touchEvents={touchEvents}\r\n              minZoom={minZoom}\r\n              maxZoom={maxZoom}\r\n              width={width}\r\n              height={height}\r\n              boxClassname=\"pigeon-filters\">\r\n              {this.state.filers.map(d => {\r\n                return <Marker key={d.cik} anchor={[d.lat, d.lng]} payload={d} onClick={this.handleMarkerClick} />\r\n              })}\r\n            </Map>\r\n          </div>\r\n        </div>\r\n        <MarkerDetails marker={this.state.selectedMarker}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class MapComponent extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       usdata: usa,\r\n//       filerdata: null\r\n//     }\r\n// }\r\n\r\n// componentDidMount() {\r\n//   csv(filers_sample).then(data => {\r\n//     this.setState({filerdata: data})\r\n//   })\r\n// }\r\n\r\n//   render() {\r\n//     const words = [\"hello\", \"my\", \"friend\"]\r\n//     console.log(this.state.filerdata)\r\n//     console.log(this.state.usdata)\r\n//     return (\r\n//       words.map((w, i) => {\r\n//         return <p key={i}>{w}</p>\r\n//       })\r\n//     )\r\n//   }\r\n\r\n  // }\r\n\r\n  // const promise = csv(filers_sample).then(data => {\r\n  //   data.forEach((d) => {\r\n  //     d.cik = +d.cik;\r\n  //   });\r\n  //   return data;\r\n  // })\r\n\r\n  // // const svg = select(\".root\").append(\"svg\");\r\n\r\n  // const usaMap = map();\r\n\r\n  // promise.then(data => {\r\n\r\n  // })\r\n\r\n\r\n  \r\n  // return <MapView\r\n  //   initialRegion={{\r\n  //     latitude: 37.78825,\r\n  //     longitude: -122.4324,\r\n  //     latitudeDelta: 0.0922,\r\n  //     longitudeDelta: 0.0421,\r\n  //   }}\r\n  // />;\r\n\r\n//   return <div></div>\r\n// };\r\n\r\n// export default MapComponent;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './App.css';\nimport MapComponent from './components/MapComponent';\n\nfunction App() {\n  // MapComponent();\n  return (\n   <MapComponent />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}